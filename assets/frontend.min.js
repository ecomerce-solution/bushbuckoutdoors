function mobileSkipLink(t) {
    var e = jQuery(".skip-content"),
        a = jQuery(".skip-link"),
        o = jQuery(t),
        i = o.attr("data-target-element"),
        n = jQuery(i),
        r = n.hasClass("skip-active") ? 1 : 0;
    a.removeClass("skip-active"), e.removeClass("skip-active"), o.removeClass("skip-active"), r ? o.removeClass("skip-active") : (o.addClass("skip-active"), n.addClass("skip-active"))
}
var ICO = ICO || {};
! function($) {
    var pixelRatio = window.devicePixelRatio ? window.devicePixelRatio : 1,
        $window = $(window),
        body = $("body"),
        deviceAgent = navigator.userAgent.toLowerCase(),
        isMobileAlt = deviceAgent.match(/(iphone|ipod|ipad|android|iemobile)/),
        imageZoomThreshold = 20;
    ICO.header = {
        init: function() {
            ICO.header.logoRetinaInit(), 1 == $("#main-header").data("sticky") && $.fn.sticky && ICO.header.stickyInit()
        },
        logoRetinaInit: function() {
            var t = $(".header-wrapper .header-container .logo img.x1");
            pixelRatio > 1 && ($(".template-index").length > 0 ? t.attr("src", t.attr("src").replace(frontendData.logoHome, frontendData.logoHomeRetina)) : t.attr("src", t.attr("src").replace(frontendData.logo, frontendData.logoRetina)))
        },
        stickyInit: function() {
            $("#main-header").sticky({
                topSpacing: 0
            }), $("#main-header-mobile").sticky({
                topSpacing: 0
            }), $("#wrapper-top-menu").sticky({
                topSpacing: 60
            })
        }
    }, ICO.page = {
        init: function() {
            if ("resultLoading" != $("body").find("#resultLoading").attr("id") && $("body").append('<div id="resultLoading" style="display:none"><div class="spinner"><div class="circle"></i></div><div class="bg"></div></div>'), $.browserSelector(), $("html").hasClass("chrome") && $.smoothScroll(), $("html").hasClass("safari") && $.smoothScroll(), pixelRatio > 1 && ICO.page.imageRetinaInit(), ICO.page.videoInit(), $("#popup_newsletter").length > 0) {
                var t = $("#popup_newsletter");
                ICO.page.newsletterPopupInit(t)
            }
        },
        imageRetinaInit: function() {
            $("img[data-srcX2]").each(function() {
                $(this).hasClass("lazy") || $(this).hasClass("lazyOwl") || $(this).attr("src", $(this).attr("data-srcX2"))
            })
        },
        disableLinkMobile: function() {
            $(".products-grid").find("a.product-image").click(function(t) {
                return t.preventDefault(), !1
            })
        },
        videoInit: function() {
            $(".container-main-video .upb_video-wrapper .upb_video-bg em").click(function() {
                return $(this).hasClass("fa-play") ? $(".container-main-video .upb_video-wrapper .upb_video-bg video").get(0).play() : $(".container-main-video .upb_video-wrapper .upb_video-bg video").get(0).pause(), $(this).toggleClass("fa-pause").toggleClass("fa-play"), !1
            })
        },
        newsletterPopupInit: function(t) {
            $("#popup_newsletter .subcriper_label input").on("click", function() {
                $(this).parent().find("input:checked").length ? ICO.collection.createCookie("newsletterSubscribe", "true", 1) : ICO.collection.readCookie("newsletterSubscribe")
            }), $("#popup_newsletter .input-box button.button").on("click", function() {
                var t = $(this);
                setTimeout(function() {
                    t.parent().find("input#popup-newsletter").hasClass("validation-failed") || ICO.collection.createCookie("newsletterSubscribe", "true", 1)
                }, 500)
            }), null == ICO.collection.readCookie("newsletterSubscribe") && ($.colorbox({
                inline: !0,
                href: t,
                opacity: .3,
                speed: 500,
                innerWidth: newsletterData.width + "px",
                innerHeight: newsletterData.height + "px",
                fixed: !0,
                onOpen: function() {
                    $("#cboxContent").addClass("newsletterbox"), $("#cboxLoadingGraphic").addClass("box-loading"), $(".newsletterbox").css({
                        "background-image": "url(" + newsletterData.bg_image + ")",
                        "background-position": "left top",
                        "background-repeat": "no-repeat",
                        "background-color": newsletterData.bg_color,
                        "background-size": "cover"
                    })
                },
                onComplete: function() {
                    setTimeout(function() {
                        $("#cboxLoadingGraphic").removeClass("box-loading")
                    }, 800)
                },
                onClosed: function() {
                    $.colorbox.remove(), $("#cboxContent").removeClass("newsletterbox"), $("#cboxContent").attr("style", "")
                }
            }), ICO.page.newsletterResize(), $window.smartresize(function() {
                $("#colorbox").find(".block-subscribe").length > 0 && ICO.page.newsletterResize()
            }))
        },
        newsletterResize: function() {
            var t = "90%",
                e = newsletterData.height + "px";
            $(window).width() > 960 && (t = newsletterData.width), $(window).height() > 700 && (e = newsletterData.height), $(window).width() <= 600 ? $(".newsletterbox .block-subscribe").css({
                width: "90%",
                top: "10%"
            }) : $(".newsletterbox .block-subscribe").css({
                width: "50%",
                top: "15%"
            }), $.colorbox.settings.height = e, $.colorbox.settings.width = t, $.colorbox.resize({
                height: e,
                width: t
            })
        },
        translateBlock: function(t) {
            multi_language && translator.isLang2() && translator.doTranslate(t)
        }
    }, ICO.collection = {
        init: function() {
            if ($(".owl-carousel").length > 0) {
                var t = $(".owl-carousel");
                t.each(function() {
                    ICO.collection.carouselInit($(this))
                })
            }
            if ($(".products-grid.grid-product-masonry").length > 0) {
                var e = $(".grid-product-masonry");
                e.each(function() {
                    ICO.collection.productGridSetup($(this))
                })
            }
            if ($(".product-deal .product-date").length > 0) {
                var a = $(".product-date");
                a.each(function() {
                    ICO.collection.productDealInit($(this))
                })
            }
            ICO.collection.layoutSwitch(), null != ICO.collection.readCookie("products-listmode") && ICO.collection.layoutListInit(), $(document).on("click", ".close-box", function() {
                $(this).parents(".box-popup").removeClass("show")
            }), $(document).on("click", ".add-to-wishlist", function(t) {
                t.preventDefault(), ICO.collection.addToWishlist($(this))
            }), $(document).on("click", ".remove-wishlist", function(t) {
                t.preventDefault(), ICO.collection.removeWishlist($(this))
            }), $(document).on("click", ".add-to-cart:not(.soldout)", function(t) {
                t.preventDefault(), ICO.collection.addToCart($(this))
            }), $(document).on("click", ".btn-remove-cart", function(t) {
                t.preventDefault(), ICO.collection.removeCartInit($(this).data("id"))
            });
          
          	ICO.collection.quickshopInit();
            ICO.collection.shareCounts();
            ICO.collection.sidebarMenuInit(); 
            ICO.collection.layerFilterInit();
            ICO.collection.colorSwatchGridInit();
        },
        createCookie: function(t, e, a) {
            var o;
            if (a) {
                var i = new Date;
                i.setTime(i.getTime() + 24 * a * 60 * 60 * 1e3), o = "; expires=" + i.toGMTString()
            } else o = "";
            document.cookie = escape(t) + "=" + escape(e) + o + "; path=/"
        },
        readCookie: function(t) {
            for (var e = escape(t) + "=", a = document.cookie.split(";"), o = 0; o < a.length; o++) {
                for (var i = a[o];
                    " " === i.charAt(0);) i = i.substring(1, i.length);
                if (0 === i.indexOf(e)) return unescape(i.substring(e.length, i.length))
            }
            return null
        },
        eraseCookie: function(t) {
            ICO.collection.createCookie(t, "", -1)
        },
        carouselInit: function(t) {
            var e = t.parent().find(".data-carousel");
            if (e.data("auto")) var a = e.data("auto");
            else var a = !1;
            e.data("mobile") ? t.owlCarousel({
                items: e.data("items"),
                slideSpeed: 500,
                autoPlay: a,
                pagination: e.data("paging"),
                addClassActive: !0,
                navigation: e.data("nav"),
                itemsCustom: [
                    [0, e.data("mobile")],
                    [450, e.data("mobile")],
                    [767, e.data("items")]
                ],
                navigationText: [e.data("prev"), e.data("next")]
            }) : t.owlCarousel({
                items: e.data("items"),
                slideSpeed: 500,
                autoPlay: a,
                pagination: e.data("paging"),
                addClassActive: !0,
                navigation: e.data("nav"),
                navigationText: [e.data("prev"), e.data("next")]
            })
        },
        productGridSetup: function(t) {
            t.imagesLoaded(function() {
                t.isotope({
                    resizable: !1,
                    itemSelector: ".product",
                    layoutMode: "fitRows"
                })
            }), t.appear(function() {
                isMobileAlt ? setTimeout(function() {
                    t.isotope("layout"), ICO.collection.animateItems(t)
                }, 500) : ICO.collection.animateItems(t)
            }), $("#products").on("isotope:update", function(e) {
                t.isotope("layout")
            })
        },
        colorSwatchGridInit: function() {
            $(".configurable-swatch-list li a").on("click", function(t) {
                t.preventDefault();
                var e = $(this).parents(".product-action").find(".product-image");
                e.find("img.main").attr("src", $(this).data("image"))
            })
        },
        animateItems: function(t) {
            t.find(".product").each(function(t) {
                $(this).css("opacity", 1), $(this).addClass("item-animated")
            })
        },
        layoutSwitch: function() {
            var t = !1;
            $(document).on("click", "span.layout-opt", function(e) {
                var a = $("#products"),
                    o = $(this).data("layout");
                $(".toolbar .view-mode .layout-opt").removeClass("active"), $(this).addClass("active"), "list" == o ? null == ICO.collection.readCookie("products-listmode") && ICO.collection.createCookie("products-listmode", 1, 10) : ICO.collection.eraseCookie("products-listmode"), t || (t = !0, a.animate({
                    opacity: 0
                }, 300), setTimeout(function() {
                    a.find(".product").removeClass("product-layout-list product-layout-grid"), a.find(".product").addClass("product-layout-" + o), $(".products-grid").length > 0 && $(".products-grid").children().css("min-height", "0"), a.isotope("layout"), a.animate({
                        opacity: 1
                    }, 200), t = !1
                }, 300), e.preventDefault())
            })
        },
        layoutListInit: function() {
            var t = $("#products");
            t.css("opacity", 0), $('.toolbar .view-mode span[data-layout="grid"]').removeClass("active"), $('.toolbar .view-mode span[data-layout="list"]').addClass("active"), t.find(".product").removeClass("product-layout-list product-layout-grid"), t.find(".product").addClass("product-layout-list"), setTimeout(function() {
                t.animate({
                    opacity: 1
                }, 200)
            }, 300)
        },
        productDealInit: function(t) {
            var e = t.data("date");
            if (e) {
                var a = {
                    date: e
                };
                $.extend(a, countdown), $.extend(a, countdownConfig), countdownTemplate && (a.template = countdownTemplate), t.countdown(a)
            }
        },
        quickshopInit: function() {
            $(document).on("initproduct", "#product-form", function() {
                var t = $(this).data("id"),
                    e = $(".product-view");
                Shopify.getProduct(t, function(t) {
                    e.find(".product-shop").attr("id", "product-" + t.id);
                  	e.find(".product-form").attr("id", "product-actions-" + t.id);
                    e.find(".product-form .product-options select").attr("id", "product-select-" + t.id);
                  	ICO.collection.createSwatch(t, e);
                })
            }), $("#product-form").trigger("initproduct"), $window.smartresize(function() {
                $("#colorbox").find(".quick-view").length > 0 && ICO.collection.quickshopResize()
            }), $.colorbox.settings.maxWidth = "90%", $.colorbox.settings.width = "1000px", $(document).on("click", ".quickview", function() {
                var $prod = $(this).closest(".product");
                eval($prod.find("[data-id^=product-block-json-]").html());
                var template = $prod.find("[data-id^=product-block-template-]").html();
                return $.colorbox({
                    opacity: .3,
                    fixed: !0,
                    onOpen: function() {
                        $("body").addClass("cbox-active")
                    },
                    onClosed: function() {
                        $.colorbox.remove(), $("body").removeClass("cbox-active"), ICO.productMediaManager.destroyZoom()
                    },
                    html: [template].join(""),
                    onComplete: function() {
                        ICO.verticleScroll.init(), ICO.productMediaManager.init(), $("#product-form").trigger("initproduct"), $.colorbox.resize(), ICO.collection.quickshopResize(), ICO.page.translateBlock(".quick-view")/*, frontendData.enableCurrency && currenciesCallbackSpecial(".quick-view span.money")*/
                    }
                })
            })
        },
        createSwatch: function(t, e) {
            if (t.variants.length > 1) {
                for (var a = 0; a < t.variants.length; a++) {
                    var o = t.variants[a],
                        i = '<option value="' + o.id + '">' + o.title + "</option>";
                    e.find("form.product-form > select").append(i)
                }
                new Shopify.OptionSelectors("product-select-" + t.id, {
                    product: t,
                    onVariantSelected: ICO.collection.selectCallback
                });
              
                
                for (var n = asset_url.substring(0, asset_url.lastIndexOf("?")), r = asset_url.substring(0, asset_url.lastIndexOf("?")), s = "", a = 0; a < t.options.length; a++) {
                    s += '<div class="swatch clearfix" data-option-index="' + a + '">', s += '<div class="header">' + t.options[a].name + "</div>";
                    var l = !1;
                    /Color|Colour/i.test(t.options[a].name) && (l = !0);
                    for (var c = new Array, d = 0; d < t.variants.length; d++) {
                        var o = t.variants[d],
                            u = o.options[a],
                            p = ICO.collection.convertToSlug(u),
                            m = "swatch-" + a + "-" + p;
//                       	   if (o.option2 != $("#country-code").html()) continue;
                      
                         c.indexOf(u) < 0 && (s += '<div data-value="' + u + '" class="swatch-element ' + (l ? "color" : "") + p + (o.available ? " available " : " soldout ") + '">', l && (s += '<div class="tooltip">' + u + "</div>"), s += '<input id="' + m + '" type="radio" name="option-' + a + '" value="' + u + '" ' + (0 == d ? " checked " : "") + (o.available ? "" : " disabled") + " />", s += l ? '<label for="' + m + '" style="background-color: ' + p + "; background-image: url(" + n + p + '.png)"><img class="crossed-out" src="' + r + 'soldout.png" /></label>' : '<label for="' + m + '">' + u + '<img class="crossed-out" src="' + r + 'soldout.png" /></label>', s += "</div>", o.available && $('.product-view .swatch[data-option-index="' + a + '"] .' + p).removeClass("soldout").addClass("available").find(":radio").removeAttr("disabled"), c.push(u))
//                            c.indexOf(u) < 0 && (s += '<div data-value="' + u + '" class="swatch-element ' + (l ? "color" : "") + p + (o.available ? " available " : " available ") + '">', l && (s += '<div class="tooltip">' + u + "</div>"), s += '<input id="' + m + '" type="radio" name="option-' + a + '" value="' + u + '" ' + (0 == d ? " checked " : "") + (o.available ? "" : " ") + " />", s += l ? '<label for="' + m + '" style="background-color: ' + p + "; background-image: url(" + n + p + '.png)"><img class="crossed-out" src="' + r + 'soldout.png" /></label>' : '<label for="' + m + '">' + u + '<img class="crossed-out" src="' + r + 'soldout.png" /></label>', s += "</div>", $('.product-view .swatch[data-option-index="' + a + '"] .' + p).removeClass("soldout").addClass("available").find(":radio").removeAttr("disabled"), c.push(u))
                    }
//                   s += '<div class="swatch clearfix" data-option-index="' + a + '">', s += '<div class="header">' + t.options[a].name + "</div>";
//                   if (t.options[a].name == "Size") {
//                         for (var k = 0; k < t.options[a].values.length; k++) {

//                             for (var c = new Array, d = 0; d < t.variants.length; d++) {
//                                 var o = t.variants[d],
//                                     u = o.options[k],
//                                     p = ICO.collection.convertToSlug(u),
//                                     m = "swatch-" + k + "-" + p;

//                                 if (o.option2 != $("#country-code").html()) continue;
//                                 c.indexOf(u) < 0 && (s += '<div data-value="' + u + '" class="swatch-element ' + (l ? "color" : "") + p + (o.available ? " available " : " soldout ") + '">', l && (s += '<div class="tooltip">' + u + "</div>"), s += '<input id="' + m + '" type="radio" name="option-' + k + '" value="' + u + '" ' + (0 == d ? " checked " : "") + (o.available ? "" : " disabled") + " />", s += l ? '<label for="' + m + '" style="background-color: ' + p + "; background-image: url(" + n + p + '.png)"><img class="crossed-out" src="' + r + 'soldout.png" /></label>' : '<label for="' + m + '">' + u + '<img class="crossed-out" src="' + r + 'soldout.png" /></label>', s += "</div>", o.available && $('.product-view .swatch[data-option-index="' + k + '"] .' + p).removeClass("soldout").addClass("available").find(":radio").removeAttr("disabled"), c.push(u))
//                             }
//                         }
//                     } else {
//                         var l = !1;
//                         /Color|Colour/i.test(t.options[a].name) && (l = !0);
//                         for (var c = new Array, d = 0; d < t.variants.length; d++) {
//                             var o = t.variants[d],
//                                 u = o.options[a],
//                                 p = ICO.collection.convertToSlug(u),
//                                 m = "swatch-" + a + "-" + p;
                          
//                                c.indexOf(u) < 0 && (s += '<div data-value="' + u + '" class="swatch-element ' + (l ? "color" : "") + p + (o.available ? " available " : " available ") + '">', l && (s += '<div class="tooltip">' + u + "</div>"), s += '<input id="' + m + '" type="radio" name="option-' + a + '" value="' + u + '" ' + (0 == d ? " checked " : "") + (o.available ? "" : " ") + " />", s += l ? '<label for="' + m + '" style="background-color: ' + p + "; background-image: url(" + n + p + '.png)"><img class="crossed-out" src="' + r + 'soldout.png" /></label>' : '<label for="' + m + '">' + u + '<img class="crossed-out" src="' + r + 'soldout.png" /></label>', s += "</div>", $('.product-view .swatch[data-option-index="' + a + '"] .' + p).removeClass("soldout").addClass("available").find(":radio").removeAttr("disabled"), c.push(u))
//                         }
//                     }
                    s += "</div>"
                }
                swatch_color_enable && (e.find("form.product-form .product-options > select").after(s), e.find(".swatch :radio").change(function() {
                    var t = $(this).closest(".swatch").attr("data-option-index"),
                        e = $(this).val();
                    $(this).closest("form").find(".single-option-selector").eq(t).val(e).trigger("change")
//                 })), t.available && (Shopify.optionsMap = {}, Shopify.linkOptionSelectors(t))
                    })), (Shopify.optionsMap = {}, Shopify.linkOptionSelectors(t))
            } else {
                e.find("form.product-form .product-options > select").remove();
                var f = '<input type="hidden" name="id" value="' + t.variants[0].id + '">';
                e.find("form.product-form").append(f)
            }
          ICO.collection.bindSwatchEvents(t, e);
          $(".swatch-element").first().trigger("click");
          
        },
      
      	bindSwatchEvents: function(t, e) {
          $(".swatch-element").on("click", function (){
            var $msg = $(".notify_form .notify_form_message");
            var msg_val = $msg.data("body");
            
            msg_val = msg_val + " - " + $(this).data("value");
            $msg.val(msg_val);
            
            if ($(this).hasClass("available")) {
              $(".product-view .price-box #soldout").hide();
              $(".product-view .price-box #price").show();
              
              $(".product-view .notify_form").hide();
              
              $(".add-to-cart-box button.btn-cart").removeClass("disabled").removeAttr('disabled');
              $(".add-to-cart-box .actions span.add-to-cart").removeClass("soldout").text("Add to Cart");
            } else {
              
              $(".product-view .price-box #soldout").show();
              $(".product-view .price-box #price").hide();
              $(".product-view .notify_form").fadeIn();
              
              $(".add-to-cart-box button.btn-cart").addClass("disabled").attr('disabled', 'disabled');
              $(".add-to-cart-box .actions span.add-to-cart").addClass("soldout").text("Sold Out");
            }
          });
        },
      
        convertToSlug: function(t) {
            return t.toLowerCase().replace(/[^a-z0-9 -]/g, "").replace(/\s+/g, "-").replace(/-+/g, "-")
        },
        selectCallback: function(t, e) {
//             if (t && (t.available ? (t.compare_at_price > t.price ? $("#price").html('<del class="price_compare">' + Shopify.formatMoney(t.compare_at_price, money_format) + '</del><div class="price">' + Shopify.formatMoney(t.price, money_format) + "</div>") : $("#price").html('<div class="price">' + Shopify.formatMoney(t.price, money_format) + "</div>"), frontendData.enableCurrency && currenciesCallbackSpecial("#price span.money"), $("#add").removeClass("disabled").removeAttr("disabled").html($("#add").data("addtocart")), t.inventory_management && t.inventory_quantity <= 0 ? ($("#selected-variant").html(e.product.title + " - " + t.title), $("#backorder").removeClass("hidden")) : $("#backorder").addClass("hidden")) : ($("#backorder").addClass("hidden"), $("#add").html($("#add").data("soldout")).addClass("disabled").attr("disabled", "disabled")), swatch_color_enable))
          		if (t && (t.compare_at_price > t.price ? $("#price").html('<del class="price_compare">' + Shopify.formatMoney(t.compare_at_price, money_format) + '</del><div class="price">' + Shopify.formatMoney(t.price, money_format) + "</div>") : $("#price").html('<div class="price">' + Shopify.formatMoney(t.price, money_format) + "</div>"), /*frontendData.enableCurrency && currenciesCallbackSpecial("#price span.money"),*/ $("#add").removeClass("disabled").removeAttr("disabled").html($("#add").data("addtocart")), t.inventory_management && t.inventory_quantity <= 0 ? ($("#selected-variant").html(e.product.title + " - " + t.title), $("#backorder").removeClass("hidden")) : $("#backorder").addClass("hidden")), swatch_color_enable)
                for (var a = $("#" + e.domIdPrefix).closest("form"), o = 0, i = t.options.length; i > o; o++) {
                    var n = a.find('.swatch[data-option-index="' + o + '"] :radio[value="' + t.options[o] + '"]');
                    n.size() && (n.get(0).checked = !0)
                }
            if (t && t.featured_image && swatch_color_enable) {
                var r = Shopify.Image.removeProtocol(t.featured_image.src);
                $(".product-image-thumbs .thumb-link").filter('[data-zoom-image="' + r + '"]').trigger("click")
            }
            t && t.sku ? $("#sku").removeClass("hidden").find("span").html(t.sku) : $("#sku").addClass("hidden").find("span").html(""), ICO.collection.quickshopResize()
        },
        quickshopResize: function() {
            var t, e = 1e3,
                a = .9;
            t && clearTimeout(t), t = setTimeout(function() {
                $("#cboxOverlay").is(":visible") && ($.colorbox.resize({
                    width: $(window).width() > e + 20 ? e : Math.round($(window).width() * a)
                }), $(".cboxPhoto").css({
                    width: $("#cboxLoadedContent").innerWidth(),
                    height: "auto"
                }), $("#cboxLoadedContent").height($(".cboxPhoto").height()), $.colorbox.resize())
            }, 300)
        },
        addToWishlist: function(t) {
            var e = t.parents("form").serialize(),
                a = t.data("id"),
                o = $("body").find(".wishlist-" + a + " .add-to-wishlist");
            $.ajax({
                type: "POST",
                url: "/contact",
                async: !0,
                data: e,
                cache: !1,
                beforeSend: function() {
                    $("#resultLoading").show()
                },
                success: function() {
                    var e = t.closest(".product"),
                        a = $("#wishlist-box");
                    a.find(".product-link").attr("href", e.find(".product-name a").attr("href")), a.find(".product-img").attr("src", e.find(".product-image img").attr("src")).attr("alt", e.find(".product-name a").html()), a.find(".product-title .product-link").html(e.find(".product-name a").html()), a.find(".product-price").html(e.find(".price").html()), o.each(function() {
                        $(this).removeClass("add-to-wishlist").addClass("added").attr("title", $(this).attr("data-added")), $(this).find("span").html($(this).attr("data-added")), $(this).find("i").removeClass("fa-heart-o").addClass("fa-heart")
                    }), setTimeout(function() {
                        $("#resultLoading").hide(), a.addClass("show"), setTimeout(function() {
                            a.removeClass("show")
                        }, 5e3)
                    }, 500)
                },
                error: function(t) {
                    var e = $("#error-notice"),
                        a = $.parseJSON(t.responseText);
                  		
                    e.find(".heading").html(a.message), e.find(".message").html(a.description), setTimeout(function() {
                        $("#resultLoading").hide(), e.addClass("show"), setTimeout(function() {
                            e.removeClass("show")
                        }, 5e3)
                    }, 500)
                }
            })
        },
        removeWishlist: function(e) {
            var a = e.parents("form").serialize(),
                o = e.parents(".item");
            $.ajax({
                type: "POST",
                url: "/contact",
                data: a,
                beforeSend: function() {
                    $("#resultLoading").show()
                },
                success: function() {
                    $("#resultLoading").hide(), o.fadeOut(500)
                },
                error: function() {
                    var e = $("#error-notice"),
                        a = $.parseJSON(t.responseText);
                    e.find(".heading").html(a.message), e.find(".message").html(a.description), setTimeout(function() {
                        $("#resultLoading").hide(), e.addClass("show"), setTimeout(function() {
                            e.removeClass("show")
                        }, 5e3)
                    }, 500)
                }
            })
        },
        addToCart: function(t) {
            var e = t.parents("form");
            $.ajax({
                type: "POST",
                url: "/cart/add.js",
                async: !0,
                data: e.serialize(),
                dataType: "json",
                beforeSend: function() {
                    $("#resultLoading").show()
                },
                error: function(t) {
                    var e = $("#error-notice");
//                         a = $.parseJSON(t.responseText);
                        if (t.status == 422) {
                          a = {
                            message: "Sorry, Sir",
                              description: "This product does not exist anymore."
                          };
                        
                        } else {
                          a = {
                            message: "Sorry, Sir",
                              description: "Sorry, This product does not exist."
                          };
                        }
                    e.find(".heading").html(a.message), e.find(".message").html(a.description), setTimeout(function() {
                        $("#resultLoading").hide(), e.addClass("show"), setTimeout(function() {
                            e.removeClass("show")
                        }, 5e3)
                    }, 500)
                },
                success: function(t) {
                    Shopify.getCart(function(a) {
                        var o = (parseInt(e.find('input[name="quantity"]').val()), $("#cart-box"));
                        o.find(".product-link").attr("href", t.url), o.find(".product-img").attr("src", Shopify.resizeImage(t.image, "medium")).attr("alt", t.title), o.find(".product-title .product-link").html(t.title), o.find(".product-price").html(Shopify.formatMoney(t.price, money_format)), /*frontendData.enableCurrency && currenciesCallbackSpecial("#cart-box span.money"),*/ setTimeout(function() {
                            $("#resultLoading").hide(), o.addClass("show"), setTimeout(function() {
                                o.removeClass("show")
                            }, 5e3)
                        }, 500), ICO.collection.updateCartInfo(a, ".cart-container .cart-wrapper .cart-inner-content")
                    })
                },
                cache: !1
            })
        },
        updateCartInfo: function(t, e) {
            var a = $(e);
            a.length && (a.empty(), $.each(t, function(e, o) {
                if ("items" == e) {
                    var i = "";
                    o.length ? (i += '<div class="cart-content">', i += '<ul class="clearfix">', $.each(o, function(t, e) {
                        i += '<li class="item-cart">', i += '<a class="product-image" href="' + e.url + '"><img alt="' + e.title + '" src="' + Shopify.resizeImage(e.image, "small") + '" /></a>', i += '<div class="product-details row-fluid show-grid">', i += '<p class="product-name"><a href="' + e.url + '"><span>' + e.title + "</span></a></p>", i += '<div class="items"><span class="price">' + e.quantity + ' × <span class="amount">' + Shopify.formatMoney(e.price, money_format) + "</span></span></div>", i += '<div class="access"><a href="javascript: void(0);" class="btn-remove btn-remove-cart" data-id="' + e.variant_id + '" title="' + cartData.removeItemLabel + '"><i class="fa fa-trash"></i></a></div>', i += "</div>", i += "</li>"
                    }), i += "</ul>", i += '<p class="subtotal"><span class="label">' + cartData.totalLabel + '</span><span class="price">' + Shopify.formatMoney(t.total_price, money_format) + "</span></p>", i += "</div>", i += '<div class="cart-checkout"><a href="/cart" class="btn-button view-cart"><span>' + cartData.buttonViewCart + '</span></a><a href="/checkout" class="btn-button checkout-cart"><span>' + cartData.buttonCheckout + "</span></a></div>") : (i += '<div class="cart-content">', i += '<p class="no-items-in-cart">' + cartData.noItemLabel + "</p>", i += "</div>")
                }
                a.append(i)
            })), $(".icon-cart-header .cart-count").length > 0 && $(".icon-cart-header .cart-count").html(t.item_count)/*, frontendData.enableCurrency && currenciesCallbackSpecial(".cart-wrapper .cart-inner span.money")*/
        },
        removeCartInit: function(t, e) {
            $.ajax({
                type: "POST",
                url: "/cart/change.js",
                data: "quantity=0&id=" + t,
                dataType: "json",
                beforeSend: function() {
                    $(".cartloading").show()
                },
                success: function(t) {
                    "function" == typeof e ? e(t) : (ICO.collection.updateCartInfo(t, ".cart-container .cart-wrapper .cart-inner-content"), $(".cartloading").hide())
                },
                error: function(t, e) {
                    Shopify.onError(t, e)
                }
            })
        },
        shareCounts: function() {
            var t = $(".sf-share-counts"),
                e = t.find("a.sf-share-fb"),
                a = t.find("a.sf-share-twit"),
                o = t.find("a.sf-share-pin"),
                i = t.find("a.sf-share-linked"),
                n = window.location.href.replace(window.location.hash, "");
            e.length > 0 && $.getJSON("https://graph.facebook.com/?id=" + n + "&callback=?", function(t) {
                void 0 !== t.shares && null !== t.shares && e.find(".count").html(t.shares), e.find(".count").addClass("animate")
            }), a.length > 0 && $.getJSON("https://urls.api.twitter.com/1/urls/count.json?url=" + n + "&callback=?", function(t) {
                void 0 !== t.count && null !== t.count && a.find(".count").html(t.count), a.find(".count").addClass("animate")
            }), i.length > 0 && $.getJSON("https://www.linkedin.com/countserv/count/share?url=" + n + "&callback=?", function(t) {
                void 0 !== t.count && null !== t.count && i.find(".count").html(t.count), i.find(".count").addClass("animate")
            }), o.length > 0 && $.getJSON("https://api.pinterest.com/v1/urls/count.json?url=" + n + "&callback=?", function(t) {
                void 0 !== t.count && null !== t.count && o.find(".count").html(t.count), o.find(".count").addClass("animate")
            }), body.on("click", ".sf-share-link", function() {
                return window.open($(this).attr("href")), !1
            })
        },
        sidebarMenuInit: function() {
            $("#mobile-menu, #categories_nav").mobileMenu({
                accordion: !0,
                speed: 400,
                closedSign: "collapse",
                openedSign: "expand",
                mouseType: 0,
                easing: "easeInOutQuad"
            })
        },
        sortbyFilter: function() {
            $(document).on("change", ".sort-by .field", function(t) {
                t.preventDefault();
                var e = $(this),
                    a = e.val();
                Shopify.queryParams.sort_by = a, ICO.collection.filterAjaxRequest()
            })
        },
        limitedAsFilter: function() {
            $(document).on("change", ".limited-view .field", function(t) {
                t.preventDefault();
                var e = $(this),
                    a = e.val();
                Shopify.queryParams.view = a, ICO.collection.filterAjaxRequest()
            })
        },
        swatchListFilter: function() {
            $(document).on("click", ".narrow-by-list .item:not(.disable)", function() {
                var t = $(this),
                    e = t.find("input").val(),
                    a = [];
                if (Shopify.queryParams.constraint && (a = Shopify.queryParams.constraint.split("+")), !t.hasClass("active")) {
                    var o = t.parents(".layer-filter").find(".active");
                    o.length > 0 && o.each(function() {
                        var t = $(this).data("handle");
                        if ($(this).removeClass("active"), t) {
                            var e = a.indexOf(t);
                            e >= 0 && a.splice(e, 1)
                        }
                    })
                }
                if (e) {
                    var i = a.indexOf(e);
                    0 > i ? (a.push(e), t.addClass("active")) : (a.splice(i, 1), t.removeClass("active"))
                }
                a.length ? Shopify.queryParams.constraint = a.join("+") : delete Shopify.queryParams.constraint, ICO.collection.filterAjaxRequest()
            })
        },
        paginationActionInit: function() {
            $(document).on("click", ".pagination a", function(t) {
                t.preventDefault();
                var e = $(this);
                if (typeof Shopify.queryParams == "undefined") {
                    Shopify.queryParams = {};
                }
                delete Shopify.queryParams.page, delete Shopify.queryParams.constraint, delete Shopify.queryParams.q, delete Shopify.queryParams.sort_by, ICO.collection.filterAjaxRequest(e.attr("href"))
            })
        },
        layerFilterInit: function() {
            ICO.collection.sortbyFilter(), ICO.collection.limitedAsFilter(), ICO.collection.paginationActionInit(), ICO.collection.swatchListFilter(), ICO.collection.layerClearAllFilter(), ICO.collection.layerClearFilter()
        },
        filterCreateUrl: function(t) {
            var e = $.param(Shopify.queryParams).replace(/%2B/g, "+");
            return t ? "" != e ? t + "?" + e : t : location.pathname + "?" + e
        },
        filterAjaxRequest: function(t) {
            if (typeof Shopify.queryParams == "undefined") {
                Shopify.queryParams = {};
            }

            delete Shopify.queryParams.page;
            var e = ICO.collection.filterCreateUrl(t);
            ICO.collection.filterGetContent(e)
        },
        filterGetContent: function(t) {
            $.ajax({
                type: "get",
                url: t,
                beforeSend: function() {
                    $("#resultLoading").show()
                },
                success: function(e) {
                    var a = e.match("<title>(.*?)</title>")[1];
                    if ($("body").hasClass("template-blog")) {
                        $(".blog-wrapper").empty().html($(e).find(".blog-wrapper").html());
                        setTimeout(function() {
                            $("html,body").animate({
                                scrollTop: $("header").offset().top
                            }, 500)
                        }, 100);
                    } else {
                        $("#collection-main").empty().html($(e).find("#collection-main").html());
                        $(".narrow-by-list").empty().html($(e).find(".narrow-by-list").html());
                        History.pushState({
                            param: Shopify.queryParams
                        }, a, t);
                        setTimeout(function() {
                            $("html,body").animate({
                                scrollTop: $(".toolbar").offset().top
                            }, 500)
                        }, 100);
                    }
                    $(".pagination").empty().html($(e).find(".pagination").html()), $(".main-breadcrumbs").empty().html($(e).find(".main-breadcrumbs").html()), $("#resultLoading").hide(), null != ICO.collection.readCookie("products-listmode") && ICO.collection.layoutListInit(), ICO.collection.productGridSetup($(".products-grid")), ICO.collection.layerClearFilter(), ICO.collection.layerClearAllFilter(), ICO.collection.colorSwatchGridInit(), ICO.page.translateBlock(".main-wrapper"), SPR.registerCallbacks(), SPR.initRatingHandler(), SPR.initDomEls(), SPR.loadProducts(), SPR.loadBadges()/*, frontendData.enableCurrency && currenciesCallbackSpecial(".products-grid span.money")*/
                },
                error: function() {
                    $("#resultLoading").hide()
                }
            })
        },
        layerClearFilter: function() {
            $(".narrow-by-list .narrow-item").each(function() {
                var t = $(this);
                t.find("input:checked").length > 0 && t.find(".clear").click(function(e) {
                    var a = [];
                    Shopify.queryParams.constraint && (a = Shopify.queryParams.constraint.split("+")), t.find("input:checked").each(function() {
                        var t = jQuery(this),
                            e = t.val();
                        if (e) {
                            var o = a.indexOf(e);
                            o >= 0 && a.splice(o, 1)
                        }
                    }), a.length ? Shopify.queryParams.constraint = a.join("+") : delete Shopify.queryParams.constraint, ICO.collection.filterAjaxRequest(), e.preventDefault()
                })
            })
        },
        layerClearAllFilter: function() {
            $(".narrow-by-list").on("click", ".clearall", function(t) {
                t.preventDefault(), delete Shopify.queryParams.constraint, delete Shopify.queryParams.q, ICO.collection.filterAjaxRequest()
            })
        }
    }, ICO.productMediaManager = {
        destroyZoom: function() {
            $(".zoomContainer").remove(), $(".product-image-gallery .gallery-image").removeData("elevateZoom")
        },
        createZoom: function(t) {
            if (ICO.productMediaManager.destroyZoom(), !(isMobileAlt || t.length <= 0)) {
                if (t[0].naturalWidth && t[0].naturalHeight) {
                    var e = t[0].naturalWidth - t.width() - imageZoomThreshold,
                        a = t[0].naturalHeight - t.height() - imageZoomThreshold;
                    if (0 > e && 0 > a) return void t.parents(".product-image").removeClass("zoom-available");
                    t.parents(".product-image").addClass("zoom-available")
                }
                "inside" == dataZoom.position ? t.elevateZoom({
                    zoomType: "inner",
                    easing: !0,
                    cursor: "crosshair"
                }) : t.elevateZoom({
                    zoomWindowPosition: dataZoom.position,
                    easing: !0
                }), dataZoom.lightbox && t.bind("click", function(e) {
                    var a = t.data("elevateZoom");
                    return a.closeAll(), $.fancybox(a.getGalleryList()), !1
                })
            }
        },
        swapImage: function(t) {
            t = $(t), t.addClass("gallery-image"), ICO.productMediaManager.destroyZoom();
            var e = $(".product-image-gallery");
            t[0].complete ? (e.find(".gallery-image").removeClass("visible"), e.append(t), t.addClass("visible"), ICO.productMediaManager.createZoom(t)) : (e.addClass("loading"), e.append(t), imagesLoaded(t, function() {
                e.removeClass("loading"), e.find(".gallery-image").removeClass("visible"), t.addClass("visible"), ICO.productMediaManager.createZoom(t)
            }))
        },
        wireThumbnails: function() {
            $(".product-image-thumbs .thumb-link").click(function(t) {
                t.preventDefault();
                var e = $(this),
                    a = $("#image-" + e.data("image-index"));
                ICO.productMediaManager.swapImage(a)
            })
        },
        initZoom: function() {
            ICO.productMediaManager.createZoom($(".gallery-image.visible"))
        },
        init: function() {
            ICO.productMediaManager.imageWrapper = $(".product-img-box"), $window.smartresize(function() {
                ICO.productMediaManager.initZoom()
            }), ICO.productMediaManager.initZoom(), ICO.productMediaManager.wireThumbnails()
        }
    }, ICO.verticleScroll = {
        init: function() {
            if ($(".product-img-box .verticl-carousel").length > 0) {
                var t = $(".product-img-box .verticl-carousel");
                ICO.verticleScroll.carouselInit(t)
            }
        },
        carouselInit: function(t) {
            var e = t.find("a").length;
            3 >= e && t.parents(".more-views-verticle").find(".more-views-nav").hide(), $(".product-img-box #carousel-up").on("click", function() {
                if (!$(".product-img-box .verticl-carousel").is(":animated")) {
                    var t = $(".product-img-box .verticl-carousel > a:last-child"),
                        e = $(".product-img-box .verticl-carousel > a:last-child").clone();
                    e.prependTo(".product-img-box .verticl-carousel"), $(".product-img-box .verticl-carousel").animate({
                        top: "-=85"
                    }, 0).stop().animate({
                        top: "+=85"
                    }, 250, function() {
                        t.remove()
                    }), ICO.productMediaManager.init()
                }
            }), $(".product-img-box #carousel-down").on("click", function() {
                if (!$(".product-img-box .verticl-carousel").is(":animated")) {
                    var t = $(".product-img-box .verticl-carousel > a:first-child"),
                        e = $(".product-img-box .verticl-carousel > a:first-child").clone();
                    e.appendTo(".product-img-box .verticl-carousel"), $(".product-img-box .verticl-carousel").animate({
                        top: "-=85"
                    }, 250, function() {
                        t.remove(), $(".product-img-box .verticl-carousel").animate({
                            top: "+=85"
                        }, 0)
                    }), ICO.productMediaManager.init()
                }
            })
        }
    };
    var infowindow, bounds, directory_bounds, mapTypeIdentifier = "",
        mapType, mapColor, mapSaturation, mapCenterLat, mapCenterLng, companyPos = "",
        isDraggable = !0,
        latitude, longitude, mapCoordinates, markersArray = [],
        pinTitle, pinContent, pinLink, address, pinButtonText, pinLogoURL = "";
    ICO.map = {
        init: function() {
            var t, e = $(".map-canvas");
            "undefined" != typeof google && (bounds = new google.maps.LatLngBounds), e.each(function(e, a) {
                t = a;
                var o = t.getAttribute("data-zoom"),
                    i = "yes" == t.getAttribute("data-controls") ? "" : "no";
                mapType = t.getAttribute("data-maptype"), mapColor = t.getAttribute("data-mapcolor"), mapCenterLat = t.getAttribute("data-center-lat"), mapCenterLng = t.getAttribute("data-center-lng"), mapSaturation = t.getAttribute("data-mapsaturation"), ICO.map.createMap(t, o, i, mapType, mapColor, mapSaturation, jQuery(this))
            })
        },
        getLatLong: function(t, e, a, o) {
            var i;
            i = new google.maps.Geocoder, i.geocode({
                address: t
            }, function(t, i) {
                o(t[0].geometry.location, t[0].geometry.location.lat(), t[0].geometry.location.lng(), e, a)
            })
        },
        addWinContent: function(t, e, a) {
            google.maps.event.addListener(t, "click", function() {
                infowindow.setContent(e), infowindow.open(a, t)
            })
        },
        addMarker: function(t, e, a, o, i, n, r) {
            var s;
            mapCoordinates = new google.maps.LatLng(latitude, longitude), e ? (companyPos = new google.maps.LatLng(latitude, longitude), s = new google.maps.Marker({
                position: mapCoordinates,
                map: t,
                icon: e,
                animation: google.maps.Animation.DROP
            })) : (companyPos = new google.maps.LatLng(latitude, longitude), s = new google.maps.Marker({
                position: mapCoordinates,
                map: t,
                animation: google.maps.Animation.DROP
            }));
            var l = '<div class="pinmarker">';
            "" !== a && (l += "<h3>" + a + "</h3>"), "" !== o && (l += "<p>" + o + " </p>"), "" !== i && "" !== r && (l += '<div><a href="' + i + '" target="_blank">' + r + "</a></div>"), l += "</div>", infowindow = new google.maps.InfoWindow, ICO.map.addWinContent(s, l, t), bounds.extend(mapCoordinates)
        },
        createMap: function(t, e, a, o, i, n, r) {
            google && (directory_bounds = new google.maps.LatLngBounds);
            var s = "",
                l = !1,
                c = [],
                d = !1;
            jQuery(t).parent().find(".map-styles-array").length > 0 ? (d = !0, c = JSON.parse(jQuery(t).parent().find(".map-styles-array").text())) : ("mono-light" == n ? ("" === i && (i = "#ffffff"), n = -100) : "mono-dark" == n ? ("" === i && (i = "#222222"), n = -100, l = !0) : n = -20, c = [{
                stylers: [{
                    hue: i
                }, {
                    invert_lightness: l
                }, {
                    saturation: n
                }]
            }]), isMobileAlt && (isDraggable = !1), mapTypeIdentifier = "satellite" === o ? google.maps.MapTypeId.SATELLITE : "terrain" === o ? google.maps.MapTypeId.TERRAIN : "hybrid" === o ? google.maps.MapTypeId.HYBRID : google.maps.MapTypeId.ROADMAP;
            var u = {
                    zoom: parseInt(e, 10),
                    scrollwheel: !1,
                    draggable: isDraggable,
                    mapTypeControl: !0,
                    disableDefaultUI: a,
                    mapTypeControlOptions: {
                        style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
                    },
                    navigationControl: !0,
                    navigationControlOptions: {
                        style: google.maps.NavigationControlStyle.SMALL
                    },
                    mapTypeId: mapTypeIdentifier,
                    styles: c
                },
                p = new google.maps.Map(t, u),
                m = r.parent().find(".pin_location").length;
            google.maps.event.addDomListener(window, "resize", function() {
                p.fitBounds(bounds), p.setZoom(parseInt(e, 10))
            }), bounds = new google.maps.LatLngBounds, r.parent().find(".pin_location").each(function(t, a) {
                s = a.getAttribute("data-pinimage"), pinTitle = a.getAttribute("data-title"), pinContent = a.getAttribute("data-content"), address = a.getAttribute("data-address"), pinLink = a.getAttribute("data-pinlink"), latitude = a.getAttribute("data-lat"), longitude = a.getAttribute("data-lng"), pinButtonText = a.getAttribute("data-button-text"), "" === latitude && "" === longitude ? ICO.map.getLatLong(address, pinTitle, s, function(t, a, o, i, n) {
                    latitude = a, longitude = o, pinTitle = i, s = n, ICO.map.addMarker(p, s, pinTitle, pinContent, pinLink, address, pinButtonText), m > 1 ? "" !== mapCenterLat && "" !== mapCenterLng ? (p.setZoom(parseInt(e, 10)), p.setCenter(new google.maps.LatLng(mapCenterLat, mapCenterLng))) : p.fitBounds(bounds) : (p.setZoom(parseInt(e, 10)), p.setCenter(new google.maps.LatLng(latitude, longitude)))
                }) : (ICO.map.addMarker(p, s, pinTitle, pinContent, pinLink, address, pinButtonText), m > 1 ? "" !== mapCenterLat && "" !== mapCenterLng ? (p.setZoom(parseInt(e, 10)), p.setCenter(new google.maps.LatLng(mapCenterLat, mapCenterLng))) : p.fitBounds(bounds) : (p.setZoom(parseInt(e, 10)), p.setCenter(new google.maps.LatLng(latitude, longitude))))
            })
        }
    };
    var blogItems = $(".blog-wrap").find(".blog-items");
    ICO.instagram = {
        init: function() {
            blogItems.each(function() {
                var t = $(this);
                t.hasClass("blog-grid-items") && ICO.instagram.blogGrid(t.find(".grid-items"))
            })
        },
        blogGrid: function(t) {
            var e = t.parent().find(".blog-instagrams");
            t.imagesLoaded(function() {
                t.isotope({
                    resizable: !1,
                    itemSelector: ".blog-item",
                    layoutMode: "fitRows",
                    getSortData: {
                        id: function(t) {
                            return $(t).data("sortid")
                        }
                    },
                    sortBy: "id",
                    sortAscending: !0
                }), setTimeout(function() {
                    t.isotope("layout")
                }, 500), e.length > 0 && ICO.instagram.blogGridInstagram(e, t), t.isotope("updateSortData").isotope(), ICO.instagram.blogGridResize()
            }).animate({
                opacity: 1
            }, 800, "easeOutExpo"), $window.smartresize(function() {
                ICO.instagram.blogGridResize()
            })
        },
        blogGridResize: function() {
            blogItems.find(".grid-items").each(function() {
                var t = $(this).find(".blog-item"),
                    e = t.first().width();
                t.first().hasClass("col-sm-sf-25") && (e /= 2), t.css("height", e)
            }), setTimeout(function() {
                blogItems.find(".grid-items").isotope("layout")
            }, 500)
        },
        blogGridInstagram: function(t, e) {
            var a = t.data("userid"),
                o = t.data("token"),
                i = t.data("count");
            $.ajax({
                type: "GET",
                dataType: "jsonp",
                cache: !1,
                url: "https://api.instagram.com/v1/users/" + a + "/media/recent/?access_token=" + o,
                success: function(a) {
                    for (var o = 0; i > o; o++)
                        if (a.data[o]) {
                            var n = "";
                            a.data[o].caption && (n = a.data[o].caption.text), t.append("<li class='blog-item col-sm-ic-1 instagram-item' data-date='" + a.data[o].created_time + "' data-sortid='" + 2 * o + "'><a class='timestamp inst-icon' target='_blank' href='" + a.data[o].link + "'><i class='fa fa-instagram'></i></a><div class='inst-img-wrap'><div class='inst-overlay'><a target='_blank' href='" + a.data[o].link + "'></a><h2>" + n + "</h2><div class='name-divide'></div><span class='date timeago' title='" + a.data[o].created_time + "' value=''>" + a.data[o].created_time + "</span></div><img class='instagram-image' src='" + a.data[o].images.low_resolution.url + "' /></div></li>")
                        }
                    $("span.timeago").timeago(), ICO.instagram.blogGridResize(), t.imagesLoaded(function() {
                        e.isotope("insert", $(t.html())), ICO.instagram.blogGridResize()
                    }), e.isotope("updateSortData").isotope()
                }
            })
        }
    }, ICO.blog = {
        init: function() {
            if ($(".blog-article-wrap .owl-carousel").length > 0) {
                var t = $(".owl-carousel");
                t.each(function() {
                    ICO.blog.articleCarouselInit($(this))
                })
            }
        },
        articleCarouselInit: function(t) {
            var e = t.parent().find("data-carousel");
            if (e.data("auto")) var a = e.data("auto");
            else var a = !1;
            t.owlCarousel({
                items: e.data("items"),
                slideSpeed: 500,
                autoPlay: a,
                pagination: e.data("paging"),
                addClassActive: !0,
                navigation: e.data("nav"),
                navigationText: [e.data("prev"), e.data("next")]
            })
        }
    }, ICO.footer = {
        init: function() {
            ICO.footer.backToTopInit(), ICO.footer.mobileAccordionInit()
        },
        backToTopInit: function() {
            $(window).scroll(function() {
                $(this).scrollTop() > 100 ? $("#back-top").fadeIn() : $("#back-top").fadeOut()
            }), $("#back-top a").click(function() {
                return $("body,html").animate({
                    scrollTop: 0
                }, 800), !1
            })
        },
        mobileAccordionInit: function() {
            $(".mobile-button").addClass("active"), $(".mobile-button").click(function() {
                $(this).parents(".footer-block-title, .block-title").next().is(":visible") ? $(this).addClass("active") : $(this).removeClass("active"), $(this).parents(".footer-block-title, .block-title").next().toggle(400)
            })
        }
    }, ICO.onReady = {
        init: function() {
            ICO.header.init(), ICO.page.init(), ICO.collection.init(), ICO.blog.init(), ICO.footer.init(), ICO.verticleScroll.init(), ICO.productMediaManager.init(), ICO.instagram.init()
        }
    }, ICO.onLoad = {
        init: function() {
            ICO.map.init()
        }
    }, $(document).ready(function() {
        ICO.onReady.init()
    }), $(window).load(function() {
        ICO.onLoad.init()
    })
}(jQuery);